## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Password Management'
description: |-

  APIs for managing passwords
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/password/forgot
    metadata:
      groupName: 'Password Management'
      groupDescription: |-

        APIs for managing passwords
      subgroup: ''
      subgroupDescription: ''
      title: 'Forgot Password'
      description: 'Send a password reset link to the given email.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password reset link sent"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Unable to send reset link"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/password/reset
    metadata:
      groupName: 'Password Management'
      groupDescription: |-

        APIs for managing passwords
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset Password'
      description: 'Reset the password using the reset token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The reset token.'
        required: true
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The new password.'
        required: true
        example: NewStrongPass123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation.'
        required: true
        example: NewStrongPass123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      token: '1234567890'
      email: user@example.com
      password: NewStrongPass123!
      password_confirmation: NewStrongPass123!
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password has been reset"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Password was used before"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Unable to reset password"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
