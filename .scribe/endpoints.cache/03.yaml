## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  APIs for managing user profile
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users/me
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing user profile
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Current User.'
      description: "Get the authenticated user's profile information."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "email": "user@example.com",
              "last_login_at": "2024-03-20T10:00:00Z",
              "two_factor_enabled": false,
              "password_status": {
                "expired": false,
                "days_left": 45,
                "status": "valid"
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/users/me
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing user profile
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Profile.'
      description: "Update the authenticated user's profile information."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The new email address.'
        required: false
        example: newuser@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: newuser@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Profile updated successfully",
            "user": {
              "id": 1,
              "email": "newuser@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email has already been taken."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
