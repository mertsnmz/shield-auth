name: 'OAuth2 Authentication'
description: |-

  APIs for OAuth2 authentication flows
endpoints:
  -
    httpMethods:
      - POST
    uri: api/oauth/token
    metadata:
      groupName: 'OAuth2 Authentication'
      groupDescription: |-

        APIs for OAuth2 authentication flows
      subgroup: ''
      subgroupDescription: ''
      title: 'Issue Token.'
      description: |-
        Issue an access token using one of the supported grant types:
        - authorization_code
        - client_credentials
        - refresh_token
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      grant_type:
        name: grant_type
        description: 'The grant type.'
        required: true
        example: authorization_code
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_id:
        name: client_id
        description: 'The client ID.'
        required: true
        example: test-client
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_secret:
        name: client_secret
        description: 'The client secret.'
        required: true
        example: client-secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'for authorization_code The authorization code.'
        required: true
        example: def50200...
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      redirect_uri:
        name: redirect_uri
        description: 'for authorization_code The redirect URI.'
        required: true
        example: 'http://localhost:3000/callback'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      scope:
        name: scope
        description: 'The requested scope.'
        required: false
        example: 'profile email'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      grant_type: authorization_code
      client_id: test-client
      client_secret: client-secret
      code: def50200...
      redirect_uri: 'http://localhost:3000/callback'
      scope: 'profile email'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token_type": "Bearer",
            "expires_in": 3600,
            "access_token": "eyJ0eXAiOiJKV1QiLCJhbG...",
            "refresh_token": "def50200841d3e9ad...",
            "scope": "profile email"
          }
        headers: []
        description: 'Authorization Code Grant'
        custom: []
      -
        status: 200
        content: |-
          {
            "token_type": "Bearer",
            "expires_in": 3600,
            "access_token": "eyJ0eXAiOiJKV1QiLCJhbG...",
            "scope": "api.read"
          }
        headers: []
        description: 'Client Credentials Grant'
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "invalid_request",
            "error_description": "The request is missing a required parameter"
          }
        headers: []
        description: 'Invalid Request'
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "invalid_grant",
            "error_description": "The authorization code is invalid"
          }
        headers: []
        description: 'Invalid Grant'
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "invalid_client",
            "error_description": "Client authentication failed"
          }
        headers: []
        description: 'Invalid Client'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/oauth/token/revoke
    metadata:
      groupName: 'OAuth2 Authentication'
      groupDescription: |-

        APIs for OAuth2 authentication flows
      subgroup: ''
      subgroupDescription: ''
      title: 'Revoke Token.'
      description: 'Revoke an access token and its associated refresh token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The access token to revoke.'
        required: true
        example: eyJ0eXAiOiJKV1QiLCJhbG...
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_id:
        name: client_id
        description: 'The client ID.'
        required: true
        example: test-client
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_secret:
        name: client_secret
        description: 'The client secret (raw value, will be hashed internally).'
        required: true
        example: client-secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      token: eyJ0eXAiOiJKV1QiLCJhbG...
      client_id: test-client
      client_secret: client-secret
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Token revoked successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "invalid_request",
            "error_description": "The request is missing a required parameter"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "invalid_client",
            "error_description": "Client authentication failed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "invalid_token",
            "error_description": "Token not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/oauth/authorize
    metadata:
      groupName: 'OAuth2 Authentication'
      groupDescription: |-

        APIs for OAuth2 authentication flows
      subgroup: ''
      subgroupDescription: ''
      title: Authorize.
      description: 'First step of Authorization Code flow. Shows authorization form to the user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      client_id:
        name: client_id
        description: 'The client ID.'
        required: true
        example: test-client
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      redirect_uri:
        name: redirect_uri
        description: 'The redirect URI.'
        required: true
        example: 'http://localhost:3000/callback'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      response_type:
        name: response_type
        description: 'Must be "code".'
        required: true
        example: code
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      scope:
        name: scope
        description: 'The requested scope.'
        required: false
        example: 'profile email'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'A random string to prevent CSRF.'
        required: false
        example: xyz123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      client_id: test-client
      redirect_uri: 'http://localhost:3000/callback'
      response_type: code
      scope: 'profile email'
      state: xyz123
    bodyParameters:
      client_id:
        name: client_id
        description: ''
        required: true
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      redirect_uri:
        name: redirect_uri
        description: 'Must be a valid URL.'
        required: true
        example: 'http://wilderman.com/architecto-laborum-porro-minus-laborum-nisi-rerum-quos'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      response_type:
        name: response_type
        description: ''
        required: true
        example: code
        type: string
        enumValues:
          - code
        exampleWasSpecified: false
        nullable: false
        custom: []
      scope:
        name: scope
        description: ''
        required: false
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      client_id: vitae
      redirect_uri: 'http://wilderman.com/architecto-laborum-porro-minus-laborum-nisi-rerum-quos'
      response_type: code
      scope: aperiam
      state: ea
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "client": {
              "name": "Test Client",
              "redirect_uri": "http://localhost:3000/callback"
            },
            "scopes": [
              {
                "name": "profile",
                "description": "Access user profile information"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "client_id": "test-client",
            "redirect_uri": "http://localhost:3000/callback",
            "scope": "profile email",
            "state": "xyz123"
          }
        headers: []
        description: 'Example Request'
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "invalid_request",
            "error_description": "The request is missing a required parameter"
          }
        headers: []
        description: 'Invalid Request'
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "invalid_client",
            "error_description": "Client not found or redirect URI mismatch"
          }
        headers: []
        description: 'Invalid Client'
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated"
          }
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/oauth/authorize
    metadata:
      groupName: 'OAuth2 Authentication'
      groupDescription: |-

        APIs for OAuth2 authentication flows
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve Authorization.'
      description: 'Second step of Authorization Code flow. Creates authorization code after user approval.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      client_id:
        name: client_id
        description: 'The client ID.'
        required: true
        example: test-client
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      redirect_uri:
        name: redirect_uri
        description: 'The redirect URI.'
        required: true
        example: 'http://localhost:3000/callback'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      scope:
        name: scope
        description: 'The approved scope.'
        required: false
        example: 'profile email'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'The state from the authorization request.'
        required: false
        example: xyz123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      client_id: test-client
      redirect_uri: 'http://localhost:3000/callback'
      scope: 'profile email'
      state: xyz123
    fileParameters: []
    responses:
      -
        status: 302
        content: "Redirects to client's redirect_uri with authorization code"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
