name: 'Session Management'
description: |-

  APIs for managing user sessions
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users/me/sessions
    metadata:
      groupName: 'Session Management'
      groupDescription: |-

        APIs for managing user sessions
      subgroup: ''
      subgroupDescription: ''
      title: 'List Sessions.'
      description: 'Get all active sessions for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
          x-content-type-options: nosniff
          x-frame-options: DENY
          x-xss-protection: '1; mode=block'
          strict-transport-security: 'max-age=31536000; includeSubDomains; preload'
          content-security-policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self';"
          referrer-policy: strict-origin-when-cross-origin
          permissions-policy: 'camera=(), microphone=(), geolocation=(), payment=()'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/me/sessions/{id}'
    metadata:
      groupName: 'Session Management'
      groupDescription: |-

        APIs for managing user sessions
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Session.'
      description: 'Terminate a specific session.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the session.'
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: harum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
